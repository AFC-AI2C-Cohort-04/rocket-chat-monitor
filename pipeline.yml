trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  SUBSCRIPTION_ID: "4131058a-f1d5-4ad6-a56a-e40fe16303e5"
  RESOURCE_GROUP: "ai2c-cohort-04-rocket-chat-resource-group"
  REGISTRY_NAME: "ai2ccohort04rcmregistry"
  IMAGE_REPOSITORY: "elasticsearch"
  DOCKERFILE: "$(Build.SourcesDirectory)/elasticsearch/Dockerfile"
  TAG: "$(Build.BuildId)"

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: "Build Elasticsearch"
    steps:
    - task: Docker@2
      inputs:
        command: "buildAndPush"
        repository: "$(IMAGE_REPOSITORY)"
        dockerfile: "$(DOCKERFILE)"
        containerRegistry: "$(dockerRegistryServiceConnection)"
        tags: |
          $(TAG)

- stage: Push
  displayName: Push
  dependsOn: Build
  jobs:
  - job: Push
    displayName: Push Elasticsearch
    steps:
    - task: Docker@2
      inputs:
        command: push
        repository: "$(REGISTRY_NAME)/$(IMAGE_REPOSITORY)"
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy
  dependsOn: Push
  jobs:
  - job: Deploy
    displayName: Deploy Elasticsearch
    steps:
    - script: |
        #!/bin/bash
        set -e
        cd TerraformFolder # Path to your Terraform configuration
        
        # Authenticate to Azure
        az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
        az account set --subscription $(subscriptionId)

        # Initialize Terraform
        terraform init

        # Apply Terraform changes
        terraform apply -auto-approve
      displayName: Deploy
